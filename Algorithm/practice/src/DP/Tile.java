package DP;

public class Tile {
    static long[] dp;
    public long solution (int N) {
        long answer = 0;

        dp = new long[N+1];
        dp[1] = 4;
        dp[2] = 6;

        if (N>2) {
            for (int i=3; i<=N; i++) {
                dp[i] = dp[i-1] + dp[i-2];
            }
        }

        answer = dp[N];

        return answer;
    }
}

/*
    대구 달성공원에 놀러 온 지수는 최근에 새로 만든 타일 장식물을 보게 되었다.
    타일 장식물은 정사각형 타일을 붙여 만든 형태였는데, 한 변이 1인 정사각형 타일부터 시작하여
    마치 앵무조개의 나선 모양처럼 점점 큰 타일을 붙인 형태였다.
    타일 장식물의 일부를 그리면 다음과 같다.

    그림에서 타일에 적힌 수는 각 타일의 한 변의 길이를 나타낸다.
    타일 장식물을 구성하는 정사각형 타일 한 변의 길이를 안쪽 타일부터 시작하여 차례로 적으면 다음과 같다.
    1, 1, 2, 3, 5, 8 ..
    지수는 문든 이러한 타일들로 구성되는 큰 직사각형의 둘레가 궁금해졌다.
    예를 들어, 처음 다섯 개의 타일이 구성하는 직사각형의 둘레는 26이다.

    타일의 개수 N이 주어질 때, N 개의 타일로 구성된 직사각형 둘레를 return 하도록 solution 함수를 작성하시오.
    1 1 3 5 8 ..
    즉, 타일의 한 변의 길이는 M[i] = M[i-1] + M[i-2]; 이다.
    둘레의 길이는 4, 6, 10, 16 ...
    이것도 마찬가지 이다.
    즉 둘레의 길이 circumference 는 C[i] = C[i-1] + C[i-2] 이다.

 */